{"version":3,"sources":["components/Header.jsx","store/action.jsx","components/Search.jsx","components/Recipes.jsx","App.js","components/Recipe.jsx","components/Router.jsx","serviceWorker.js","store/reducers.jsx","store/index.jsx","index.js"],"names":["Header","react_default","a","createElement","class","fetchData","recipe","dispatch","getState","axios","get","concat","process","then","res","console","log","data","recipes","type","payload","catch","err","Search","state","recipeName","findRecipe","e","preventDefault","_this","props","hanldeChange","setState","Object","defineProperty","target","name","value","className","style","marginBottom","onSubmit","this","onChange","handleChange","aria-describedby","placeholder","Component","connect","Recipes","map","key","recipe_id","height","src","image_url","alt","title","length","substring","publisher","Link","to","App","components_Header","components_Search","components_Recipes","Recipe","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","_this2","match","params","id","width","marginTop","ingredients","item","href","publisher_url","source_url","social_rank","Router","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","initState","reducer","undefined","action","newrecipes","toConsumableArray","objectSpread","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9b0219a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <div class=\"jumbotron jumbotron-fluid p-4 bg-primary text-white text-center\">\n           <div class=\"container\">\n                <h1 class=\"display-3\">Food<i class=\"fas fa-utensils\"></i>Recipes</h1>\n                 <p class=\"lead\">Guiding You on how to cook</p>\n           </div> \n  </div>\n  )\n}\n\nexport default Header\n","import axios from 'axios';\n\n\nexport const ADD_RECIPES = 'addRecpies'\n\nexport const addrecpies = (recpies) => {\n    return {\n        type: ADD_RECIPES,\n        payload: recpies\n    }\n}\n\n\n\nexport const fetchData = (recipe) => (dispatch, getState) => {\n    axios.get(`https://www.food2fork.com/api/search?key=${process.env.REACT_APP_FF_KEY}&q=${recipe}&page=2`)\n    .then(res => {\n        console.log(res.data.recipes)\n        dispatch(addrecpies(res.data.recipes))\n    })\n    .catch(err => console.log(err))\n}","import React, { Component } from 'react';\nimport {fetchData} from '../store/action'\nimport { connect } from 'react-redux';\n\nclass Search extends Component{\n\n state = {\n    recipeName:''\n }  \n\n findRecipe = (e) => {\n     e.preventDefault();\n     this.props.dispatch(fetchData(this.state.recipeName))\n }\n\n hanldeChange = (e) => {\n     this.setState({ [e.target.name]: e.target.value  });\n }\n render(){\n  return (\n    <div class=\"container\" className=\"form-container\" style={{marginBottom:\"2rem\"}}>\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <form onSubmit={this.findRecipe} class=\"form-inline\">\n                    <div class=\"form-group\">\n                        <input className=\"form__input\" onChange={this.handleChange} name=\"recipeName\" type=\"text\" class=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Search...\"/>\n                    </div>\n                <button className=\"form__button\" type=\"submit\" class=\"btn btn-primary\">Search</button>\n                </form>\n            </div>\n        </div>\n    </div>\n  )\n }\n}\n\nexport default connect()(Search)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nclass Recipes extends Component {\n  render() {\n    return (\n      <div className=\"container text-muted\">\n        <div className=\"row\">\n        {this.props.recipes.map(res => {\n            return (\n                <div key={res.recipe_id} className=\"col-md-6 col-lg-4\" style={{marginBottom:\"2rem\"}}>\n                    <div  className=\"card\">\n                        <div className=\"card-body\">\n                             <img  style={{height: \"18rem\"}} src={res.image_url} className=\"card-img-top img-fluid\" alt={res.title}/>\n                            <h5 className=\"card-title\">\n                            {res.title.length < 20 ? (res.title) : `${res.title.substring(0,25)}...`}\n                            \n                            </h5>\n                            <p className=\"card-text\">Publisher: <span>{res.publisher}</span></p>\n                            <Link to={`/recipe/${res.recipe_id}`}><button  class=\"btn btn-primary\">View Recipe</button></Link>\n                        </div>\n                    </div>\n                </div>\n            )\n        })}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes : state.recipes\n    }\n   \n}\nexport default connect(mapStateToProps)(Recipes)\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport Recipes from './components/Recipes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Search/>\n        <Recipes/>  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Header from './Header';\nexport class Recipe extends Component {\n  state = {\n    recipe:{}\n  }\n\n  componentDidMount(){\n    axios.get(`https://www.food2fork.com/api/get?key=${process.env.REACT_APP_FF_KEY}&rId=${this.props.match.params.id}`)\n    .then(res => {\n      console.log(res.data)\n      this.setState({ recipe: res.data.recipe });\n    })\n    .catch(err => console.log(err))\n  }\n  render() {\n    const { recipe } = this.state\n    return (\n       <div>\n           <Header/>\n        <div className=\"container recipe_container\">\n          <div className=\"row\">\n              <div className=\"col-md-6\">\n                  <div  className=\"card\" style={{width: \"34rem\"}}>\n                       \n                                <div className=\"card-body\">\n                                    <h3 className=\"card-title\">\n                                        {recipe.title}\n                                    </h3>\n                                    <img style={{height: \"18rem\"}} className=\"card-img-top\" src={recipe.image_url}  alt={recipe.title}/>\n                                    <h5 style={{marginTop:\"2rem\"}}className=\"card-subtitle mb-2 text-muted\">\n                                        Ingredients :\n                                    </h5>\n                                    <ul class=\"list-group list-group-flush\">\n                                        {recipe.ingredients && recipe.ingredients.map(item => {\n                                            return <li class=\"list-group-item\">{item}</li>\n                                        })}\n                                        </ul>\n                                </div>\n                  </div>\n                </div>\n\n              <div className=\"col-md-6\">\n                  <div  className=\"card\" style={{width: \"34rem\"}}>\n                                <div className=\"card-body\">\n                                    <h3 className=\"card-title\">\n                                        {recipe.title}\n                                    </h3>\n                                        \n                                    <p class=\"card-text\"><a href={recipe.publisher_url}>Visit Publisher Site:</a> </p>\n                                    <p class=\"card-text\"><a href={recipe.source_url}>Soure copyright</a> </p>\n                                    \n                                </div>\n                  </div>\n\n                      <div  className=\"card rank_card\" style={{width: \"34rem\"}}>\n                            <div className=\"card-body\">\n                                <h3 className=\"card-title\">\n                                        Rank\n                                </h3>\n                                <p class=\"card-text rank\">{recipe.social_rank}</p> \n                            </div>\n                    </div> \n\n                    <Link to=\"/\"><button type=\"button\" class=\"btn btn-primary btn-lg btn-block\">Back to Food</button></Link>\n\n                 </div>\n               \n            </div>\n            <hr/>\n          </div>\n    </div>\n     )\n  }\n}\n\nexport default connect()(Recipe)\n","import React from 'react'\nimport App from '../App';\nimport Recipe from './Recipe';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path =\"/\" component={App}/>\n            <Route exact path =\"/recipe/:id\" component={Recipe}/>\n        </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_RECIPES} from './action';\n\nconst initState = {\n    recipes: []\n}\nconst reducer = (state = initState, action) => {\n    switch(action.type){\n        case ADD_RECIPES:\n            const newrecipes = [...action.payload]\n            return {\n                ...state,\n                recipes: newrecipes\n            }\n        default:\n            return state\n    }\n   \n}\n\nexport default reducer","import { createStore, applyMiddleware } from 'redux';\nimport reducer from \"./reducers\";\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\nimport  { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(<Provider store={store}><Router /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}